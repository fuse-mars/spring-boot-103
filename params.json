{"name":"Spring-boot-103","tagline":"Two applications that fulfill the Command Query Responsibilities Separation (CQRS) pattern implementation","body":"# spring-boot-103\r\nTwo applications that fulfill the Command Query Responsibilities Segregation (CQRS) pattern implementation.\r\n\r\n### CQRS in simple terms\r\n  CQRS stands for Command Query Responsibility Segregation. It is a design pattern that enforces the separation of actions that modify the state of an application and the actions that leave the state of the application intact.\r\n* Qoute from the [inventor's paper](https://cqrs.files.wordpress.com/2010/11/cqrs_documents.pdf): \"objects are split into two objects, one containing the Commands one containing the Queries.\"\r\n* [Idea behind the design](https://en.wikipedia.org/wiki/Command%E2%80%93query_separation) : Asking a question should not change the answer.\r\n\r\n### Spring application - old style \r\nThis is implemented in the [Spring Boot 102](http://fuse-mars.github.io/spring-boot-102)\r\n\r\n### Spring application - cqrs style\r\n\r\nTODO\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}